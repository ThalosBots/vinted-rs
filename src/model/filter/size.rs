#[cfg(feature = "advanced_filters")]
use bb8_postgres::tokio_postgres::Row;
use serde::{Deserialize, Serialize};
use typed_builder::TypedBuilder;

// TODO las tallas y las categorias de tallas est√°n solo en Castellano
/**
Size structs are differenciated by parent categories
XL for Men is not the same as XL for children
*/
#[derive(Debug, Clone, TypedBuilder, PartialEq, Eq, Serialize, Deserialize)]
pub struct Size {
    /// Vinted-rs autogenerated id
    pub id: i32,
    /// Size id given by Vinted (non-unique)
    pub id_vinted: i32,
    /// Size name in Spanish
    pub size: String,
    /// Parent category associated with the size type
    pub category: String,
}

#[cfg(feature = "advanced_filters")]
impl From<Row> for Size {
    fn from(row: Row) -> Self {
        Size::builder()
            .id(row.get("id"))
            .id_vinted(row.get("id_vinted"))
            .size(row.get("size"))
            .category(row.get("category"))
            .build()
    }
}
